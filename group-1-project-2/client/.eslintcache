[{"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\EditProfile.js":"1","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\GenreRating.js":"2","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\LoginHistory.js":"3","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\index.js":"4","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Signup.js":"5","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\UploadBook.js":"6","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Login.js":"7","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Home.js":"8","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Forgot.js":"9"},{"size":4503,"mtime":1608577809954,"results":"10","hashOfConfig":"11"},{"size":4525,"mtime":1608571281145,"results":"12","hashOfConfig":"11"},{"size":2107,"mtime":1608558948953,"results":"13","hashOfConfig":"11"},{"size":501,"mtime":1608150176103,"results":"14","hashOfConfig":"11"},{"size":3089,"mtime":1608558948953,"results":"15","hashOfConfig":"11"},{"size":4316,"mtime":1608558948953,"results":"16","hashOfConfig":"11"},{"size":3928,"mtime":1608577384235,"results":"17","hashOfConfig":"11"},{"size":4004,"mtime":1608577384231,"results":"18","hashOfConfig":"11"},{"size":2750,"mtime":1608577384226,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1u3ggv5",{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\EditProfile.js",["45","46","47"],"import Axios from \"axios\"; //axios is a open source library we have imported for http requests and fetching.\r\nimport React, { useState, useEffect } from \"react\"; //we have imported the react library\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\"; // We have imported Button, Col, Container, Form, Row from the react-bootsrap library\r\nimport { useNavigate } from \"react-router-dom\"; // This imports the navigation feature for the user from the react-router-dom\r\nexport default function EditProfile() {\r\n  //this exports the Edit profile function\r\n  const [redirect, setRedirect] = useState(\"\"); // this sets the current stae to redirect\r\n\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    //if the user id is not equal to the local storage it redirects the user to the login page\r\n    window.location.href = \"/login\";\r\n  }\r\n  // else it returns the message, counter as per the current state of the user\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const [message, setMesssage] = useState(\"\");\r\n\r\n  const [counter, setCounter] = useState(\"\");\r\n  //part 2\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/profile\", {\r\n      // this posts the user id from the local storage to the url localhost:4000/profile page in the user id field\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // if the user is undefined it returns the error message and redirects the user to the home page\r\n        // redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.details[0]); // accepts the details of the user\r\n      }\r\n    });\r\n  }, [counter]);\r\n  const onFormSubmit = (e) => {\r\n    // function that executes on submission of the form\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target); // new form data generated on the target page\r\n    const formDataObj = Object.fromEntries(formData.entries()); // form data is taken as entries from the user in the form object form\r\n    formDataObj.uid = localStorage.getItem(\"uid\"); // gets the user id from local storage stored as a form object entry\r\n    Axios.post(\"http://localhost:4000/updateuser\", formDataObj).then(\r\n      // posts the data on the page with url localhost:4000/updateuser page\r\n      (response) => {\r\n        if (typeof response.data.error !== \"undefined\") {\r\n          // if the user is undefined it gives the error message and redirects the user to the home page.\r\n          //redirect to home\r\n          setMesssage(response.data.error);\r\n        } else {\r\n          localStorage.setItem(\"username\", formDataObj.uname); //sets the username entered by the user in the form object as uname and stored in local storage\r\n          setMesssage(response.data.message); //gives a message\r\n          setCounter(counter + 1); // sets the counter and increments the counter by 1\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    //this function returns the form with the Fields Username to be neterd by the user and Email address field for email id to be entered by the user and a submit button to submit the data entered in these feilds by the user.\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"uname\"\r\n                  defaultValue={response.username}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  defaultValue={response.email}\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {message} <br />\r\n              <br />\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",["48","49"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\GenreRating.js",["50","51","52","53"],"//Importing premade libraries Axios,React,React-bootstrap, react-router-dom and ../assets/rating.jpg\r\nimport Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form, Col, Container, Row, Table, Button } from \"react-bootstrap\";\r\nimport rating from \"../assets/rating.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Create a fuction GenreRating to generate the ratings for Genre of books\r\n//It is used to create the ratings of genres of books\r\nexport default function GenreRating() {\r\n\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [message, setMesssage] = useState(\"\");\r\n  const [errmessage, setErrMesssage] = useState(\"\");\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [genrelist, setGenresList] = useState([]);\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/genres\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // It is redirecting to home\r\n        setErrMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.allratings);\r\n        setGenresList(response.data.genrelist);\r\n      }\r\n    });\r\n  }, [counter]);\r\n  const onFormSubmit = (e) => {\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n    formDataObj.uid = localStorage.getItem(\"uid\");\r\n\r\n    Axios.post(\"http://localhost:4000/postgenres\", formDataObj).then(\r\n      (response) => {\r\n        if (typeof response.data.error !== \"undefined\") {\r\n          //It is redirecting to home\r\n          setMesssage(response.data.error);\r\n        } else {\r\n          console.log(counter + \": incrementing counter\");\r\n          setCounter(counter + 1);\r\n          setMesssage(response.data.message);\r\n        }\r\n      }\r\n    );\r\n    e.preventDefault();\r\n  };\r\n\r\n  //Here we create a form to generate ratings for genres by using table fields Genre, public rating and your rating\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            {errmessage}\r\n            <Table bordered size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Genre</th>\r\n                  <th>Public Rating</th>\r\n                  <th>Your Rating</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {console.log(\"The counter is \" + \"\" + counter + \"\" + response)}\r\n                {response.map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{value.genredesc}</td>\r\n                      <td>\r\n                        <img src={rating} width=\"20\" height=\"20\" />\r\n                        &nbsp;{(value.rating.toFixed(2))}\r\n                      </td>\r\n                      <td>\r\n                        <img src={rating} width=\"20\" height=\"20\" />\r\n                        &nbsp;\r\n                        {value.userrating ? value.userrating : \"Give Rating\"}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n            <br />\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Select Genre</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"genreid\" custom>\r\n                  {genrelist.map((value, index) => {\r\n                    return (\r\n                      <option value={value.genreid}>{value.genredesc}</option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Give Rating</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"userrating\" custom>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              {message}\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Post Rating\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",["54","55"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\LoginHistory.js",["56"],"\r\n//Importing premade libraries  Axios,React,React-bootstrap and react-router-dom\r\nimport Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Create LoginHistory function.\r\n// It is used to create the past all login history of login\r\nexport default function LoginHistory() {\r\n  \r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [message, setMesssage] = useState(\"\");\r\n  const [response, setResponse] = useState([]);\r\n  // Add some desigin using CSS\r\n  var scrollcss = {\r\n    position: \"relative\",\r\n    height: \"300px\",\r\n    overflow: \"auto\",\r\n  };\r\n  \r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/loginhistory\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // It is redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.loginhistory);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  //Here we create a form with field login date and id is automatically generated in table\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6} style={scrollcss}>\r\n            {message}\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Login Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {console.log(response)}\r\n                {response.map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{value.lastlogindate.replace(\"T\", \"  \")}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\index.js",[],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Signup.js",["57"],"\r\n// Importing premade libraries Axios,React,React-bootstrap and react-router-dom\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Create a signup function for new user\r\n//This function allow to create a new user for book exchange\r\nexport default function Signup() {\r\n  let navigate = useNavigate();\r\n  const [message, setMesssage] = useState(\"\");\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n    console.log(formDataObj);\r\n    console.log(formDataObj.psw);\r\n    //Check password is matching or not\r\n    if (formDataObj.psw != formDataObj.cpsw) {\r\n      setMesssage(\"Passwords dont match\");\r\n    } else {\r\n      Axios.post(\"http://localhost:4000/adduser\", formDataObj).then(\r\n        (response) => {\r\n          if (typeof response.data.error !== \"undefined\") {\r\n            //It is redirect to home\r\n            setMesssage(response.data.error);\r\n          } else {\r\n            navigate(\"/login\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  // Create a form for signup with fields like username,email address,password and confirm password.\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"uname\"\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We will never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"psw\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"cpsw\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              {message} <br />\r\n              <br />\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\UploadBook.js",["58"],"// Importing premade libraries Axios,React and React-bootstrap\r\nimport Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\n//Create a function to upload book\r\n//This function is used to upload a new book with description\r\nexport default function UploadBook() {\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [genrelist, setGenresList] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [selectedfile, setFile] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  var uploadcss = {\r\n    opacity: \"0.5\",\r\n    fontSize: \"20px\",\r\n  };\r\n  \r\n  // Read the image using file reader and setFile as an attachment\r\n  const onChangeHandler = (event) => {\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      let data = reader.result.toString().replace(/^data:.+;base64,/, \"\");\r\n      let attachment = {\r\n        base64Data: data,\r\n        filename: file.name,\r\n        contentType: file.type,\r\n      };\r\n      setFile(attachment);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/genres\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // It is redirecting to home\r\n        setMessage(response.data.error);\r\n      } else {\r\n        setGenresList(response.data.genrelist);\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n\r\n  const onFormSubmit = (e) => {\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    console.log(selectedfile);\r\n    e.preventDefault();\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n    Axios.post(\"http://localhost:4000/uploadbook\", {\r\n      file: selectedfile,\r\n      uid: localStorage.getItem(\"uid\"),\r\n      ...formDataObj,\r\n    }).then((response) => {\r\n      setLoading(false);\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        //It is redirecting to home\r\n        setMessage(response.data.error);\r\n      } else {\r\n        setMessage(response.data.message);\r\n      }\r\n    });\r\n  };\r\n  //Here we are creating the form for book upload where we add bookname,book description and select genre.After that we submit form and add the values of fields in the table.\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicName\">\r\n                <Form.Label>Book Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"bookname\"\r\n                  placeholder=\"Enter Book Name\"\r\n                />\r\n              </Form.Group>{\" \"}\r\n              <Form.Group controlId=\"formBasicDesc\">\r\n                <Form.Label>Book Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"bookdesc\"\r\n                  placeholder=\"Enter Book Description\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Select Genre</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"genreid\" custom>\r\n                  {genrelist.map((value, index) => {\r\n                    return (\r\n                      <option value={value.genreid}>{value.genredesc}</option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form>\r\n                <Form.Group>\r\n                  <input type=\"file\" name=\"file\" onChange={onChangeHandler} />\r\n                </Form.Group>\r\n              </Form>\r\n              {message}\r\n              <br />\r\n              {loading ? <i style={uploadcss}>Uploading.......</i> : \"\"}\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Login.js",["59","60"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Home.js",["61","62","63"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Forgot.js",[],{"ruleId":"64","severity":1,"message":"65","line":4,"column":10,"nodeType":"66","messageId":"67","endLine":4,"endColumn":21},{"ruleId":"64","severity":1,"message":"68","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":18},{"ruleId":"64","severity":1,"message":"69","line":7,"column":20,"nodeType":"66","messageId":"67","endLine":7,"endColumn":31},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":73,"column":48,"nodeType":"76","messageId":"77","endLine":73,"endColumn":49},{"ruleId":"78","severity":1,"message":"79","line":79,"column":25,"nodeType":"80","endLine":79,"endColumn":68},{"ruleId":"78","severity":1,"message":"79","line":83,"column":25,"nodeType":"80","endLine":83,"endColumn":68},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","replacedBy":"82"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":10,"nodeType":"66","messageId":"67","endLine":6,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":20,"column":25,"nodeType":"76","messageId":"85","endLine":20,"endColumn":27},{"ruleId":"64","severity":1,"message":"86","line":57,"column":11,"nodeType":"66","messageId":"67","endLine":57,"endColumn":17},{"ruleId":"64","severity":1,"message":"87","line":10,"column":3,"nodeType":"66","messageId":"67","endLine":10,"endColumn":11},{"ruleId":"64","severity":1,"message":"88","line":11,"column":3,"nodeType":"66","messageId":"67","endLine":11,"endColumn":6},{"ruleId":"64","severity":1,"message":"89","line":26,"column":9,"nodeType":"66","messageId":"67","endLine":26,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":26,"column":15,"nodeType":"92","endLine":26,"endColumn":56},{"ruleId":"78","severity":1,"message":"79","line":56,"column":25,"nodeType":"80","endLine":60,"endColumn":27},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["93"],["94"],"eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'config' is assigned a value but never used.","'Navigate' is defined but never used.","'Nav' is defined but never used.","'src' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","no-global-assign","no-unsafe-negation"]
[{"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\App.js":"1","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\index.js":"3","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Login.js":"4","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Forgot.js":"5","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Signup.js":"6","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\LoginHistory.js":"7","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\GenreRating.js":"8","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\EditProfile.js":"9","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\UploadBook.js":"10","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Home.js":"11"},{"size":2673,"mtime":1608491826619,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606782328283,"results":"14","hashOfConfig":"13"},{"size":501,"mtime":1608150176103,"results":"15","hashOfConfig":"13"},{"size":2405,"mtime":1608481762205,"results":"16","hashOfConfig":"13"},{"size":1647,"mtime":1608303668687,"results":"17","hashOfConfig":"13"},{"size":2750,"mtime":1608307120720,"results":"18","hashOfConfig":"13"},{"size":1827,"mtime":1608481852334,"results":"19","hashOfConfig":"13"},{"size":4175,"mtime":1608481838746,"results":"20","hashOfConfig":"13"},{"size":2819,"mtime":1608482581328,"results":"21","hashOfConfig":"13"},{"size":3756,"mtime":1608486663736,"results":"22","hashOfConfig":"13"},{"size":2604,"mtime":1608492635397,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1u3ggv5",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\App.js",["52","53","54"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\index.js",[],["55","56"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Login.js",["57","58"],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Forgot.js",[],"C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Signup.js",["59"],"import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function Signup() {\r\n  let navigate = useNavigate();\r\n  const [message, setMesssage] = useState(\"\");\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n    console.log(formDataObj);\r\n    console.log(formDataObj.psw);\r\n    if (formDataObj.psw != formDataObj.cpsw) {\r\n      setMesssage(\"Passwords dont match\");\r\n    } else {\r\n      Axios.post(\"http://localhost:4000/adduser\", formDataObj).then(\r\n        (response) => {\r\n          if (typeof response.data.error !== \"undefined\") {\r\n            //redirect to home\r\n            setMesssage(response.data.error);\r\n          } else {\r\n            navigate(\"/login\");\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"uname\"\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"psw\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  name=\"cpsw\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              {message} <br />\r\n              <br />\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\LoginHistory.js",["60"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function LoginHistory() {\r\n  //part 1\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [message, setMesssage] = useState(\"\");\r\n  const [response, setResponse] = useState([]);\r\n  var scrollcss = {\r\n    position: \"relative\",\r\n    height: \"300px\",\r\n    overflow: \"auto\",\r\n  };\r\n  //part 2\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/loginhistory\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.loginhistory);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  //part 3\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6} style={scrollcss}>\r\n            {message}\r\n            <Table striped bordered hover size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Login Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {console.log(response)}\r\n                {response.map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{value.lastlogindate.replace(\"T\", \"  \")}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\GenreRating.js",["61","62","63","64"],"import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Form, Col, Container, Row, Table, Button } from \"react-bootstrap\";\r\nimport rating from \"../assets/rating.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function GenreRating() {\r\n  //part 1\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [message, setMesssage] = useState(\"\");\r\n  const [errmessage, setErrMesssage] = useState(\"\");\r\n\r\n  const [response, setResponse] = useState([]);\r\n  const [genrelist, setGenresList] = useState([]);\r\n\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  //part 2\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/genres\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // redirect to home\r\n        setErrMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.allratings);\r\n        setGenresList(response.data.genrelist);\r\n      }\r\n    });\r\n  }, [counter]);\r\n  const onFormSubmit = (e) => {\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n    formDataObj.uid = localStorage.getItem(\"uid\");\r\n\r\n    Axios.post(\"http://localhost:4000/postgenres\", formDataObj).then(\r\n      (response) => {\r\n        if (typeof response.data.error !== \"undefined\") {\r\n          //redirect to home\r\n          setMesssage(response.data.error);\r\n        } else {\r\n          console.log(counter + \": incrementing counter\");\r\n          setCounter(counter + 1);\r\n          setMesssage(response.data.message);\r\n        }\r\n      }\r\n    );\r\n    e.preventDefault();\r\n  };\r\n\r\n  //part 3\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            {errmessage}\r\n            <Table bordered size=\"sm\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Genre</th>\r\n                  <th>Public Rating</th>\r\n                  <th>Your Rating</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {console.log(\"The counter is \" + \"\" + counter + \"\" + response)}\r\n                {response.map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{value.genredesc}</td>\r\n                      <td>\r\n                        <img src={rating} width=\"20\" height=\"20\" />\r\n                        &nbsp;{value.rating}\r\n                      </td>\r\n                      <td>\r\n                        <img src={rating} width=\"20\" height=\"20\" />\r\n                        &nbsp;\r\n                        {value.userrating ? value.userrating : \"Give Rating\"}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n            <br />\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Select Genre</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"genreid\" custom>\r\n                  {genrelist.map((value, index) => {\r\n                    return (\r\n                      <option value={value.genreid}>{value.genredesc}</option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Give Rating</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"userrating\" custom>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              {message}\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Post Rating\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\EditProfile.js",["65","66","67","68"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function EditProfile() {\r\n  const [redirect, setRedirect] = useState(\"\");\r\n\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const [message, setMesssage] = useState(\"\");\r\n\r\n  const [counter, setCounter] = useState(\"\");\r\n  //part 2\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/profile\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setResponse(response.data.details[0]);\r\n      }\r\n    });\r\n  }, [counter]);\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n    formDataObj.uid = localStorage.getItem(\"uid\");\r\n    Axios.post(\"http://localhost:4000/updateuser\", formDataObj).then(\r\n      (response) => {\r\n        if (typeof response.data.error !== \"undefined\") {\r\n          //redirect to home\r\n          setMesssage(response.data.error);\r\n        } else {\r\n          setMesssage(response.data.message);\r\n          setCounter(counter + 1);\r\n        }\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"uname\"\r\n                  defaultValue={response.username}\r\n                  placeholder=\"Enter username\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  defaultValue={response.email}\r\n                  placeholder=\"Enter email\"\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n              {message} <br />\r\n              <br />\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\UploadBook.js",["69"],"import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nexport default function UploadBook() {\r\n  if (!localStorage.getItem(\"uid\")) {\r\n    window.location.href = \"/login\";\r\n  }\r\n  const [genrelist, setGenresList] = useState([]);\r\n  const [message, setMesssage] = useState(\"\");\r\n  const [selectedfile, setFile] = useState({});\r\n\r\n  //   http:localhost:3000/Public/images/image.jpg\r\n  //part 2\r\n  const onChangeHandler = (event) => {\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      let data = reader.result.toString().replace(/^data:.+;base64,/, \"\");\r\n      let attachment = {\r\n        base64Data: data,\r\n        filename: file.name,\r\n        contentType: file.type,\r\n      };\r\n      setFile(attachment);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"http://localhost:4000/genres\", {\r\n      uid: localStorage.getItem(\"uid\"),\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        // redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setGenresList(response.data.genrelist);\r\n      }\r\n    });\r\n  }, []);\r\n  const onFormSubmit = (e) => {\r\n    const formData = new FormData(e.target);\r\n    const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    console.log(selectedfile);\r\n    e.preventDefault();\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    // const formDataObj = Object.fromEntries(formData.entries());\r\n\r\n    Axios.post(\"http://localhost:4000/uploadbook\", {\r\n      file: selectedfile,\r\n      uid: localStorage.getItem(\"uid\"),\r\n      ...formDataObj,\r\n    }).then((response) => {\r\n      if (typeof response.data.error !== \"undefined\") {\r\n        //redirect to home\r\n        setMesssage(response.data.error);\r\n      } else {\r\n        setMesssage(response.data.message);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Container>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs={10} md={8} lg={6}>\r\n            <Form onSubmit={onFormSubmit}>\r\n              <Form.Group controlId=\"formBasicName\">\r\n                <Form.Label>Book Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"bookname\"\r\n                  placeholder=\"Enter Book Name\"\r\n                />\r\n              </Form.Group>{\" \"}\r\n              <Form.Group controlId=\"formBasicDesc\">\r\n                <Form.Label>Book Description</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"bookdesc\"\r\n                  placeholder=\"Enter Book Description\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Select Genre</Form.Label>\r\n                <Form.Control as=\"select\" size=\"sm\" name=\"genreid\" custom>\r\n                  {genrelist.map((value, index) => {\r\n                    return (\r\n                      <option value={value.genreid}>{value.genredesc}</option>\r\n                    );\r\n                  })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form>\r\n                <Form.Group>\r\n                  <input type=\"file\" name=\"file\" onChange={onChangeHandler} />\r\n                </Form.Group>\r\n              </Form>\r\n              {message}\r\n              <br />\r\n              <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\xampp\\htdocs\\Group-1-Project-2---BookExchange\\group-1-project-2\\client\\src\\components\\Home.js",["70","71","72"],{"ruleId":"73","severity":1,"message":"74","line":2,"column":17,"nodeType":"75","messageId":"76","endLine":2,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":9,"column":3,"nodeType":"75","messageId":"76","endLine":9,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":67,"column":10,"nodeType":"75","messageId":"76","endLine":67,"endColumn":15},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"73","severity":1,"message":"83","line":10,"column":3,"nodeType":"75","messageId":"76","endLine":10,"endColumn":11},{"ruleId":"73","severity":1,"message":"84","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":6},{"ruleId":"85","severity":1,"message":"86","line":14,"column":25,"nodeType":"87","messageId":"88","endLine":14,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":21},{"ruleId":"73","severity":1,"message":"77","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":69,"column":48,"nodeType":"87","messageId":"91","endLine":69,"endColumn":49},{"ruleId":"92","severity":1,"message":"93","line":75,"column":25,"nodeType":"94","endLine":75,"endColumn":68},{"ruleId":"92","severity":1,"message":"93","line":79,"column":25,"nodeType":"94","endLine":79,"endColumn":68},{"ruleId":"73","severity":1,"message":"77","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":21},{"ruleId":"73","severity":1,"message":"83","line":4,"column":23,"nodeType":"75","messageId":"76","endLine":4,"endColumn":31},{"ruleId":"73","severity":1,"message":"95","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":18},{"ruleId":"73","severity":1,"message":"96","line":6,"column":20,"nodeType":"75","messageId":"76","endLine":6,"endColumn":31},{"ruleId":"73","severity":1,"message":"97","line":47,"column":11,"nodeType":"75","messageId":"76","endLine":47,"endColumn":17},{"ruleId":"73","severity":1,"message":"98","line":26,"column":9,"nodeType":"75","messageId":"76","endLine":26,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":26,"column":15,"nodeType":"101","endLine":26,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":56,"column":25,"nodeType":"94","endLine":60,"endColumn":27},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Genre' is defined but never used.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'Navigate' is defined but never used.","'Nav' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'config' is assigned a value but never used.","'src' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'src' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","TemplateLiteral","no-global-assign","no-unsafe-negation"]